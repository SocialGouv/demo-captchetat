import type { NextPage } from "next";
import dynamic from "next/dynamic";
import Head from "next/head";

import styles from "../styles/Home.module.css";

import React, { FormEventHandler, useState, useEffect } from "react";

const Captcha = dynamic(
  () => import("reactjs-captcha").then((mod) => mod.Captcha),
  {
    ssr: false,
  }
);

type ResultType = null | true | false;

const CaptchaForm = () => {
  const [result, setResult] = useState<ResultType>(null);
  let captcha: any;
  let loaded = false;
  const onSubmit: FormEventHandler = async (e) => {
    if (result !== null) setResult(null);
    e.preventDefault();
    // @ts-ignore
    const instance = window.botdetect.getInstanceByStyleName("captchaFR");
    const postData = {
      code: instance.userInput.value.toUpperCase(),
      id: instance.captchaId,
    };
    const apiResult = await fetch("/api/submit", {
      method: "POST",
      body: JSON.stringify(postData),
      headers: { "Content-Type": "application/json; charset=utf-8" },
    }).then((r) => {
      try {
        return r.json();
      } catch (e) {
        console.log(r.statusText);
        console.log(r.text());
        console.log(e);
      }
    });
    if (apiResult && apiResult.success === true) {
      setResult(true);
    } else {
      setResult(false);
      captcha.retry();
    }
    e.preventDefault();
  };
  useEffect(() => {
    const initCaptcha = async () => {
      loaded = true;
      const captchaSettings = (await import("reactjs-captcha")).captchaSettings;
      if (captchaSettings.set) {
        captchaSettings.set({
          captchaEndpoint: "/api/simple-captcha-endpoint",
        });
      }
    };
    if (captcha && !loaded) initCaptcha();
  }, []);
  return (
    <section id="main-content" style={{ textAlign: "center" }}>
      <form id="captchaForm" method="POST" onSubmit={onSubmit}>
        <Captcha
          //@ts-ignore
          captchaStyleName="captchaFR"
          ref={(instance: any) => {
            if (!captcha) captcha = instance;
          }}
        />
        <br />
        <label>
          <input id="captchaFormulaireExtInput" type="text" />
        </label>
        <br />
        <button type="submit" id="submitButton">
          Envoyer
        </button>
        {result === false && <div style={{ fontSize: "5em" }}>❌</div>}
        {result === true && <div style={{ fontSize: "5em" }}>✓</div>}
      </form>
    </section>
  );
};

const Home: NextPage = () => {
  return (
    <div className={styles.container}>
      <Head>
        <title>CaptchEtat demo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <a href="https://api.gouv.fr/les-api/api-captchetat">CaptchEtat</a>{" "}
          demo
        </h1>
        <br />
        <br />
        <br />
        <br />

        <CaptchaForm />
      </main>

      <footer className={styles.footer}>
        <a
          href="https://github.com/socialgouv"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by SocialGouv
        </a>
      </footer>
    </div>
  );
};

export default Home;
